## YAML Template.
---
        
spring:
    datasource: 
        url: jdbc:sqlserver://localhost\SQLEXPRESS;databaseName=LoginMicroservice
        username: admin
        password: admin
        driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.SQLServer2012Dialect
                
                
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 435076188324-tl58a7bp5liva2bqiu58opisqekib7pd.apps.googleusercontent.com
              clientSecret: wTtRD1NF4ozcpyoPlmLganwX
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 837288503321706
              clientSecret: 639161539b088b226472f8d0d5b2ec1a
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: 6ef30668af44ef38904b
              clientSecret: 39ca420e5a5cbabf44ea3f80a67932dc7a438d1b
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:4200/oauth2/redirect